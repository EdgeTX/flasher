name: Publish Binaries

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os_name: linux
            artifact_name: edgetx-flasher-nightly.AppImage
            asset_name: edgetx-linux-amd64.AppImage
            binary_ending: AppImage
          - os: windows-latest
            os_name: windows
            artifact_name: edgetx-flasher-nightly.exe
            asset_name: edgetx-windows-amd64.exe
            binary_ending: exe
          - os: macos-latest
            os_name: macos
            artifact_name: edgetx-flasher-nightly.dmg
            asset_name: edgetx-macos-amd64.dmg
            binary_ending: dmg

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Embed Git commit info
        run: echo ${GITHUB_SHA} | cut -c1-7 > src/support/dfu-util/git_commit

      - name: Install dependencies
        run: npm install

      - name: Build installation package
        run: npm run electron:build

      - name: Get short hash
        id: vars
        shell: bash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Rename and organise files
        run: mv dist_electron/*.${{ matrix.binary_ending }} edgetx-flasher-${{ os_name }}-${{ steps.vars.outputs.sha_short }}.${{ matrix.binary_ending }}

      - name: Upload ${{ matrix.binary_ending }}
        uses: 'actions/upload-artifact@v2'
        with:
          name: flasher-latest
          path: edgetx-flasher-${{ matrix.os_name }}-${{ steps.vars.outputs.sha_short }}.${{ matrix.binary_ending }}
          retention-days: 15
          if-no-files-found: error

  upload:
    name: Upload latest release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: flasher-latest
          path: flasher-latest

      - name: Upload binaries to release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "Latest Build"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: flasher-latest/edgetx-flasher-*.*
          automatic_release_tag: 'latest'
          prerelease: false
